global headers
headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 '
                         '(KHTML, like Gecko) Chrome/57.0.2987.98 Safari/537.36',
           "Host": "www.zhihu.com",
           "Referer": "https://www.zhihu.com/",
           }
# 建立一个会话，可以把同一用户的不同请求联系起来；直到会话结束都会自动处理cookies
global session
session = requests.Session()
#session.keep_alive = False
# 建立LWPCookieJar实例，可以存Set-Cookie3类型的文件。
# 而MozillaCookieJar类是存为'/.txt'格式的文件
session.cookies = http.cookiejar.LWPCookieJar("cookie")
# 若本地有cookie则不用再post数据了
try:
    session.cookies.load(ignore_discard=True)
    print('Cookie加载成功！')
except IOError:
    print('Cookie未加载！')
            



def __init__(self):
    self.headers = {'content-type': 'application/json',
                    'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 '
                                  '(KHTML, like Gecko) Chrome/57.0.2987.98 Safari/537.36',
                    "Host": "www.zhihu.com",
                    "Referer": "https://www.zhihu.com/",
                    }
    # 建立一个会话，可以把同一用户的不同请求联系起来；直到会话结束都会自动处理cookies
    self.session = requests.Session()
    self.session.keep_alive = False
    # 建立LWPCookieJar实例，可以存Set-Cookie3类型的文件。
    # 而MozillaCookieJar类是存为'/.txt'格式的文件
    self.session.cookies = http.cookiejar.LWPCookieJar("cookie")
    # 若本地有cookie则不用再post数据了
    try:
        self.session.cookies.load(ignore_discard=True)
        print('Cookie加载成功！')
    except IOError:
        print('Cookie未加载！')
